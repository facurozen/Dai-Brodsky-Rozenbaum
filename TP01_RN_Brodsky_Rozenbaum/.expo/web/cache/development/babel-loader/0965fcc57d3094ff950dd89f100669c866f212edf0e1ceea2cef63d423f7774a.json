{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Perfil(_ref) {\n  var route = _ref.route;\n  var user = route.params.user;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useState3 = useState(_objectSpread({}, user)),\n    _useState4 = _slicedToArray(_useState3, 2),\n    editedUser = _useState4[0],\n    setEditedUser = _useState4[1];\n  var handleEditClick = function handleEditClick() {\n    setIsEditing(true);\n  };\n  var handleSaveClick = function handleSaveClick() {\n    setIsEditing(false);\n  };\n  var handleInputChange = function handleInputChange(field, value) {\n    setEditedUser(_objectSpread(_objectSpread({}, editedUser), {}, _defineProperty({}, field, value)));\n  };\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24\n      },\n      children: \"Perfil\"\n    }), isEditing ? _jsxs(View, {\n      children: [_jsx(TextInput, {\n        placeholder: \"Nombre\",\n        value: editedUser.Nombre,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange('Nombre', text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Apellido\",\n        value: editedUser.Apellido,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange('Apellido', text);\n        }\n      }), _jsx(TextInput, {\n        placeholder: \"Correo electr\\xF3nico\",\n        value: editedUser.CorreoElectronico,\n        onChangeText: function onChangeText(text) {\n          return handleInputChange('CorreoElectronico', text);\n        }\n      }), _jsx(Button, {\n        title: \"Guardar\",\n        onPress: handleSaveClick\n      })]\n    }) : _jsxs(View, {\n      children: [_jsxs(Text, {\n        children: [\"Nombre: \", user.Nombre]\n      }), _jsxs(Text, {\n        children: [\"Apellido: \", user.Apellido]\n      }), _jsxs(Text, {\n        children: [\"Correo electr\\xF3nico: \", user.CorreoElectronico]\n      }), _jsx(Button, {\n        title: \"Editar\",\n        onPress: handleEditClick\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Perfil","route","user","params","isEditing","setIsEditing","editedUser","setEditedUser","handleEditClick","handleSaveClick","handleInputChange","field","value","fontSize","Nombre","text","Apellido","CorreoElectronico"],"sources":["C:/Users/devandroid/Downloads/Dai-Brodsky-Rozenbaum-Jaichenco/TP01_RN_Brodsky_Rozenbaum/src/screens/Perfil.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\n\r\nexport default function Perfil({ route }) {\r\n  const { user } = route.params;\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedUser, setEditedUser] = useState({ ...user });\r\n\r\n  const handleEditClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSaveClick = () => {\r\n    // Aquí puedes agregar lógica para guardar los cambios en el perfil\r\n    // Por ejemplo, hacer una solicitud a tu API para actualizar el perfil\r\n    // y luego actualizar el estado o mostrar un mensaje de éxito.\r\n\r\n    // Después de guardar, puedes cambiar de nuevo a la visualización\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleInputChange = (field, value) => {\r\n    // Actualiza el objeto editedUser cuando se cambia un campo\r\n    setEditedUser({\r\n      ...editedUser,\r\n      [field]: value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text style={{ fontSize: 24 }}>Perfil</Text>\r\n      {isEditing ? (\r\n        // Modo de edición: muestra un formulario editable\r\n        <View>\r\n          <TextInput\r\n            placeholder=\"Nombre\"\r\n            value={editedUser.Nombre}\r\n            onChangeText={(text) => handleInputChange('Nombre', text)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Apellido\"\r\n            value={editedUser.Apellido}\r\n            onChangeText={(text) => handleInputChange('Apellido', text)}\r\n          />\r\n          <TextInput\r\n            placeholder=\"Correo electrónico\"\r\n            value={editedUser.CorreoElectronico}\r\n            onChangeText={(text) => handleInputChange('CorreoElectronico', text)}\r\n          />\r\n          <Button title=\"Guardar\" onPress={handleSaveClick} />\r\n        </View>\r\n      ) : (\r\n        // Modo de visualización: muestra los datos del usuario\r\n        <View>\r\n          <Text>Nombre: {user.Nombre}</Text>\r\n          <Text>Apellido: {user.Apellido}</Text>\r\n          <Text>Correo electrónico: {user.CorreoElectronico}</Text>\r\n          <Button title=\"Editar\" onPress={handleEditClick} />\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAGnD,eAAe,SAASC,MAAM,OAAY;EAAA,IAATC,KAAK,QAALA,KAAK;EACpC,IAAQC,IAAI,GAAKD,KAAK,CAACE,MAAM,CAArBD,IAAI;EACZ,gBAAkCJ,QAAQ,CAAC,KAAK,CAAC;IAAA;IAA1CM,SAAS;IAAEC,YAAY;EAC9B,iBAAoCP,QAAQ,mBAAMI,IAAI,EAAG;IAAA;IAAlDI,UAAU;IAAEC,aAAa;EAEhC,IAAMC,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAC5BH,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAMI,eAAe,GAAG,SAAlBA,eAAe,GAAS;IAM5BJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,KAAK,EAAEC,KAAK,EAAK;IAE1CL,aAAa,iCACRD,UAAU,2BACZK,KAAK,EAAGC,KAAK,GACd;EACJ,CAAC;EAED,OACE,MAAC,IAAI;IAAA,WACH,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAA,UAAC;IAAM,EAAO,EAC3CT,SAAS,GAER,MAAC,IAAI;MAAA,WACH,KAAC,SAAS;QACR,WAAW,EAAC,QAAQ;QACpB,KAAK,EAAEE,UAAU,CAACQ,MAAO;QACzB,YAAY,EAAE,sBAACC,IAAI;UAAA,OAAKL,iBAAiB,CAAC,QAAQ,EAAEK,IAAI,CAAC;QAAA;MAAC,EAC1D,EACF,KAAC,SAAS;QACR,WAAW,EAAC,UAAU;QACtB,KAAK,EAAET,UAAU,CAACU,QAAS;QAC3B,YAAY,EAAE,sBAACD,IAAI;UAAA,OAAKL,iBAAiB,CAAC,UAAU,EAAEK,IAAI,CAAC;QAAA;MAAC,EAC5D,EACF,KAAC,SAAS;QACR,WAAW,EAAC,uBAAoB;QAChC,KAAK,EAAET,UAAU,CAACW,iBAAkB;QACpC,YAAY,EAAE,sBAACF,IAAI;UAAA,OAAKL,iBAAiB,CAAC,mBAAmB,EAAEK,IAAI,CAAC;QAAA;MAAC,EACrE,EACF,KAAC,MAAM;QAAC,KAAK,EAAC,SAAS;QAAC,OAAO,EAAEN;MAAgB,EAAG;IAAA,EAC/C,GAGP,MAAC,IAAI;MAAA,WACH,MAAC,IAAI;QAAA,WAAC,UAAQ,EAACP,IAAI,CAACY,MAAM;MAAA,EAAQ,EAClC,MAAC,IAAI;QAAA,WAAC,YAAU,EAACZ,IAAI,CAACc,QAAQ;MAAA,EAAQ,EACtC,MAAC,IAAI;QAAA,WAAC,yBAAoB,EAACd,IAAI,CAACe,iBAAiB;MAAA,EAAQ,EACzD,KAAC,MAAM;QAAC,KAAK,EAAC,QAAQ;QAAC,OAAO,EAAET;MAAgB,EAAG;IAAA,EAEtD;EAAA,EACI;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}